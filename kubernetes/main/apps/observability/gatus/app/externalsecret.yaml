---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &secret gatus-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: *secret
    template:
      engineVersion: v2
      data:
        PUSHOVER_TOKEN: "{{ .GATUS_PUSHOVER_TOKEN }}"
        PUSHOVER_USER_KEY: "{{ .PUSHOVER_USER_KEY }}"
        INIT_POSTGRES_DBNAME: gatus
        INIT_POSTGRES_HOST: postgres17-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .GATUS_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .GATUS_POSTGRES_PASS }}"
        GATUS_POSTGRES_ENCODED_PASS: "{{ .GATUS_POSTGRES_ENCODED_PASS }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
        OIDC_CLIENT_ID: "{{ .OIDC_CLIENT_ID }}"
        OIDC_CLIENT_SECRET: "{{ .OIDC_CLIENT_SECRET }}"
  dataFrom:
    - extract:
        key: secrets/cloudnative-pg
    - extract:
        key: secrets/pushover
    - extract:
        key: secrets/gatus
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/clusterexternalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: vault-issuer-ca
spec:
  externalSecretName: vault-issuer-ca
  namespaceSelector:
    matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: In
        values:
          - network
  refreshTime: 5m
  externalSecretSpec:
    refreshInterval: 5m
    secretStoreRef:
      kind: ClusterSecretStore
      name: vault-backend
    target:
      name: vault-issuer-ca
      creationPolicy: Orphan
      template:
        engineVersion: v2
        type: kubernetes.io/tls
        metadata:
          annotations:
            cert-manager.io/alt-names: 'authentik.authentik.svc.cluster.local'
            cert-manager.io/certificate-name: authentik
            cert-manager.io/common-name: authentik.authentik.svc.cluster.local
            cert-manager.io/ip-sans: ""
            cert-manager.io/issuer-group: ""
            cert-manager.io/issuer-kind: ClusterIssuer
            cert-manager.io/issuer-name: vault-issuer
            cert-manager.io/uri-sans: ""
          labels:
            controller.cert-manager.io/fao: "true"
    dataFrom:
      - extract:
          key: secrets/certificates/authentik
          property: ca.crt
          decodingStrategy: Auto
