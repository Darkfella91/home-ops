---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
spec:
  interval: 30m
  chart:
    spec:
      chart: crowdsec
      version: 0.13.0
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    container_runtime: containerd
    agent:
      wait_for_lapi:
        image:
          tag: "1.37.0@sha256:768e5c6f5cb6db0794eec98dc7a967f40631746c32232b78a3105fb946f3ab83"
      acquisition:
        - namespace: network
          podName: nginx-external-controller-*
          program: nginx
        - namespace: media
          podName: jellyseerr-*
          program: jellyseerr
        - namespace: vaultwarden
          podName: vaultwarden-*
          program: VAULTWARDEN
        - namespace: idp
          podName: keycloak-0
          program: keycloak
      env:
        - name: PARSERS
          value: "crowdsecurity/cri-logs crowdsecurity/whitelists crowdsecurity/geoip-enrich"
        - name: COLLECTIONS
          value: "crowdsecurity/modsecurity inherent-io/keycloak LePresidente/jellyseerr crowdsecurity/nginx Dominic-Wagner/vaultwarden crowdsecurity/base-http-scenarios crowdsecurity/http-cve crowdsecurity/http-dos crowdsecurity/whitelist-good-actors"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      persistentVolume:
        config:
          enabled: true
    lapi:
      extraVolumes:
        - name: custom-configs
          secret:
            secretName: crowdsec-config
      extraVolumeMounts:
        - name: custom-configs
          mountPath: /etc/crowdsec_data/notifications/http.yaml
          subPath: http.yaml
        - name: custom-configs
          mountPath: /etc/crowdsec_data/profiles.yaml
          subPath: profiles.yaml
      deployAnnotations:
        reloader.stakater.com/auto: "true"
      extraInitContainers:
        - name: initdb
          image: "ghcr.io/onedr0p/postgres-init:16.5@sha256:53fa938cfe6d2dae23b120145362341950f1154bf9d0e7f2ec4e471d61624f79"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: crowdsec-secret
      env:
        # For an internal test, disable the Online API
        - name: DISABLE_ONLINE_API
          value: "false"
        - name: ENROLL_KEY
          valueFrom:
            secretKeyRef:
              name: &secret crowdsec-secret
              key: ENROLL_KEY
        - name: ENROLL_INSTANCE_NAME
          value: "cluster"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: *secret
              key: INIT_POSTGRES_PASS
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: *secret
              key: INIT_POSTGRES_USER
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    config:
      config.yaml.local: |
        db_config:
          type:     postgresql
          user:     $${DB_USER}
          password: $${DB_PASSWORD}
          db_name:  crowdsec
          host:     postgres17-rw.database
          port:     5432
          sslmode:  require
