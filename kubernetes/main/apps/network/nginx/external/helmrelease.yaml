---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nginx-external
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.11.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - targetPath: controller.maxmindLicenseKey
      kind: Secret
      name: nginx-external-secret
      valuesKey: MAXMIND_LICENSE_KEY
  values:
    fullnameOverride: nginx-external
    controller:
      extraVolumes:
        - name: crowdsec-bouncer-plugin
          emptyDir: {}
        - name: crowdsec-bouncer-config
          secret:
            secretName: crowdsec-bouncer-config
            defaultMode: 292
      extraInitContainers:
        - name: init-clone-crowdsec-bouncer
          image: crowdsecurity/lua-bouncer-plugin:v1.0.5@sha256:90f5c611bebbbe89b8aef3218dad1df3bd9fbe51554024384b56026c69c55925
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/"]
          env:
            - name: BOUNCER_CONFIG
              value: "/crowdsec/crowdsec-bouncer.conf"
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 10001
            runAsGroup: 10001
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
          - name: crowdsec-bouncer-plugin
            mountPath: /lua_plugins
      extraVolumeMounts:
        - name: crowdsec-bouncer-plugin
          mountPath: /etc/nginx/lua/plugins/crowdsec
          subPath: crowdsec
          readOnly: true
        - name: crowdsec-bouncer-config
          mountPath: /etc/nginx/lua/plugins/crowdsec/crowdsec-bouncer.conf
          subPath: crowdsec-bouncer.conf
          readOnly: true
      replicaCount: 2
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: external.${PUBLIC_DOMAIN}
          lbipam.cilium.io/ips: 192.168.91.95
      ingressClassResource:
        name: external
        default: false
        controllerValue: k8s.io/external
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["external"]
      allowSnippetAnnotations: true
      config:
        enable-modsecurity: true
        enable-owasp-modsecurity-crs: true
        modsecurity-snippet: |-
          SecRuleEngine On
          SecRequestBodyAccess On
          SecAuditLog /var/log/modsec_audit.log
          SecAuditLogParts ABIJDEFHZ
          SecAuditEngine RelevantOnly
        plugins: "crowdsec"
        lua-shared-dicts: "crowdsec_cache: 50m"
        block-user-agents: "GPTBot,~*GPTBot*,ChatGPT-User,~*ChatGPT-User*,Google-Extended,~*Google-Extended*,CCBot,~*CCBot*,Omgilibot,~*Omgilibot*,FacebookBot,~*FacebookBot*" # taken from https://github.com/superseriousbusiness/gotosocial/blob/main/internal/web/robots.go
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        hsts-max-age: 31536000
        force-ssl-redirect: "true"
        keep-alive-requests: 10000
        keep-alive: 10
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
          "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
          "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent", "country_code": "$geoip2_city_country_code", "country_name": "$geoip2_city_country_name"}
        proxy-body-size: 0
        proxy-ssl-verify: "on"
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3
        use-geoip2: "true"
        use-forwarded-headers: "true"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: network/darkfellanet-tls
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/instance: nginx-external
              app.kubernetes.io/component: controller
      resources:
        requests:
          cpu: 100m
        limits:
          memory: 1000Mi
    defaultBackend:
      enabled: false
