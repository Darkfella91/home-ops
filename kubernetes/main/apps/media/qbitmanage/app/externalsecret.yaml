---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &secret qbitmanage-secret
spec:
  refreshInterval: 10m
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: *secret
    template:
      engineVersion: v2
      data:
        config.yml: |
          commands:
            dry_run: true
            cross_seed: false
            recheck: false
            cat_update: false
            tag_update: true
            rem_unregistered: false
            tag_tracker_error: true
            rem_orphaned: true
            tag_nohardlinks: true
            share_limits: true
            skip_qb_version_check: true
            skip_cleanup: false

          qbt:
            host: qbittorrent.media.svc.cluster.local

          settings:
            force_auto_tmm: false # Will force qBittorrent to enable Automatic Torrent Management for each torrent.
            tracker_error_tag: issue # Will set the tag of any torrents that do not have a working tracker.
            nohardlinks_tag: noHL # Will set the tag of any torrents with no hardlinks.
            share_limits_tag: ~share_limit # Will add this tag when applying share limits to provide an easy way to filter torrents by share limit group/priority for each torrent
            share_limits_min_seeding_time_tag: MinSeedTimeNotReached # Tag to be added to torrents that have not yet reached the minimum seeding time
            share_limits_min_num_seeds_tag: MinSeedsNotMet # Tag to be added to torrents that have not yet reached the minimum number of seeds
            share_limits_last_active_tag: LastActiveLimitNotReached # Tag to be added to torrents that have not yet reached the last active limit
            cross_seed_tag: cross-seed # Will set the tag of any torrents that are added by cross-seed command
            cat_filter_completed: true # Filters for completed torrents only when running cat_update command
            share_limits_filter_completed: true # Filters for completed torrents only when running share_limits command
            tag_nohardlinks_filter_completed: true # Filters for completed torrents only when running tag_nohardlinks command
            cat_update_all: true # Checks and udpates all torrent categories if set to True when running cat_update command, otherwise only update torrents that are uncategorized

            force_auto_tmm_ignore_tags: cross-seed
            disable_qbt_default_share_limits: true
          directory:
            # Do not remove these
            # Cross-seed var: </your/path/here/>  # Output directory of cross-seed
            # root_dir var: </your/path/here/>  # Root downloads directory used to check for orphaned files, noHL, and RecycleBin.
            # <OPTIONAL> remote_dir var: </your/path/here/>  # Path of docker host mapping of root_dir.
            # remote_dir must be set if you're running qbit_manage locally and qBittorrent/cross_seed is in a docker
            # remote_dir should not be set if qbit_manage is running in a container
            # <OPTIONAL> recycle_bin var: </your/path/here/>   # Path of the RecycleBin folder. Default location is set to remote_dir/.RecycleBin
            # <OPTIONAL> torrents_dir var: </your/path/here/>  # Path of the your qbittorrent torrents directory. Required for `save_torrents` attribute in recyclebin
            # <OPTIONAL> orphaned_dir var: </your/path/here/>  # Path of the the Orphaned Data folder. This is similar to RecycleBin, but only for orphaned data.
            cross_seed: /your/path/here/
            root_dir: /data/downloads/torrents/complete
            recycle_bin: /data/downloads/torrents/.RecycleBin
            torrents_dir: /qBittorrent/BT_backup
            orphaned_dir: /data/downloads/torrents/orphaned_data

          cat:
            # Category & Path Parameters
            # <Category Name> : <save_path>  # Path of your save directory.

          cat_change:
            # This moves all the torrents from one category to another category. This executes on --cat-update
            # WARNING: if the paths are different and Default Torrent Management Mode is set to automatic the files could be moved !!!
            # <Old Category Name> : <New Category>

          tracker:
            # Mandatory
            # Tag Parameters
            # <Tracker URL Keyword>:    # <MANDATORY> This is the keyword in the tracker url. You can define multiple tracker urls by splitting with `|` delimiter
            # <MANDATORY> Set tag name. Can be a list of tags or a single tag
            #   tag: <Tag Name>
            # <OPTIONAL> Set the category based on tracker URL. This category option takes priority over the category defined by save directory
            #   cat: <Category Name>
            # <OPTIONAL> Set this to the notifiarr react name. This is used to add indexer reactions to the notifications sent by Notifiarr
            #   notifiarr: <notifiarr indexer>
            animebytes.tv:
              tag: AnimeBytes
              notifiarr: animebytes
            avistaz:
              tag:
              - Avistaz
              - tag2
              - tag3
              notifiarr: avistaz
            beyond-hd:
              tag: [Beyond-HD, tag2, tag3]
              cat: movies
              notifiarr: beyondhd
            blutopia:
              tag: Blutopia
              notifiarr: blutopia
            cartoonchaos:
              tag: CartoonChaos
            digitalcore:
              tag: DigitalCore
              notifiarr: digitalcore
            gazellegames:
              tag: GGn
            hdts:
              tag: HDTorrents
            landof.tv:
              tag: BroadcasTheNet
              notifiarr: broadcasthenet
            myanonamouse:
              tag: MaM
            passthepopcorn:
              tag: PassThePopcorn
              notifiarr: passthepopcorn
            privatehd:
              tag: PrivateHD
              notifiarr:
            torrentdb:
              tag: TorrentDB
              notifiarr: torrentdb
            torrentleech|tleechreload:
              tag: TorrentLeech
              notifiarr: torrentleech
            tv-vault:
              tag: TV-Vault
            stackoverflow|empirehost|bgp:
              tag: IPTorrents
              notifiarr: iptorrents
            speedapp:
              tag: speedapp.io
              notifiarr: speedapp.io
            # The "other" key is a special keyword and if defined will tag any other trackers that don't match the above trackers into this tag
            other:
              tag: other

          nohardlinks:
            # Tag Movies/Series that are not hard linked outside the root directory
            # Mandatory to fill out directory parameter above to use this function (root_dir/remote_dir)
            # This variable should be set to your category name of your completed movies/completed series in qbit. Acceptable variable can be any category you would like to tag if there are no hardlinks found
            movies-completed:
              exclude_tags:
              - Beyond-HD
              - AnimeBytes
              - MaM
              ignore_root_dir: true
            tv-completed:
              exclude_tags:
              - Beyond-HD
              - AnimeBytes
              - MaM
              ignore_root_dir: true
            cross-seed:
              ignore_root_dir: false

          share_limits:

            noHL_cross-seed:
             priority: 1
             include_all_tags:
             - noHL
             - cross-seed
             categories:
              - cross-seed
             max_seeding_time: 10m
             cleanup: true
             custom_tag: sharelimits_noHL_cross-seed
            noHL_TorrentLeech:
              priority: 2
              include_all_tags:
              - noHL
              - TorrentLeech
              categories:
              - movies-completed
              - tv-completed
              max_seeding_time: 10d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_noHL_TorrentLeech

            noHL_speedapp.io:
              priority: 3
              include_all_tags:
              - noHL
              - speedapp.io
              categories:
              - movies-completed
              - tv-completed
              max_seeding_time: 3d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_noHL_speedapp.io

            noHL_IPTorrents:
              priority: 4
              include_all_tags:
              - noHL
              - IPTorrents
              categories:
              - movies-completed
              - tv-completed
              max_seeding_time: 16d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_noHL_IPTorrents

            TorrentLeech:
              priority: 5
              include_all_tags:
              - TorrentLeech
              categories:
              - movies-completed
              - tv-completed
              - cross-seed
              max_seeding_time: 30d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_TorrentLeech

            IPTorrents:
              priority: 6
              include_all_tags:
              - IPTorrents
              categories:
              - movies-completed
              - tv-completed
              - cross-seed
              max_seeding_time: 30d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_IPTorrents

            speedapp.io:
              priority: 7
              include_all_tags:
              - speedapp.io
              categories:
              - movies-completed
              - tv-completed
              - cross-seed
              max_seeding_time: 30d
              cleanup: true
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_speedapp.io

            general:
              priority: 8
              include_any_tags:
              - speedapp.io
              - IPTorrents
              - TorrentLeech
              categories:
              - general-completed
              max_ratio: 5
              max_seeding_time: 30d
              cleanup: false
              resume_torrent_after_change: true
              add_group_to_tag: true
              custom_tag: sharelimits_general

          recyclebin:
            # Recycle Bin method of deletion will move files into the recycle bin (Located in /root_dir/.RecycleBin) instead of directly deleting them in qbit
            # By default the Recycle Bin will be emptied on every run of the qbit_manage script if empty_after_x_days is defined.
            enabled: true
            # <OPTIONAL> empty_after_x_days var:
            # Will automatically remove all files and folders in recycle bin after x days. (Checks every script run)
            # If this variable is not defined it, the RecycleBin will never be emptied.
            # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
            empty_after_x_days: 7
            # <OPTIONAL> save_torrents var:
            # If this option is set to true you MUST fill out the torrents_dir in the directory attribute.
            # This will save a copy of your .torrent and .fastresume file in the recycle bin before deleting it from qbittorrent
            save_torrents: true
            # <OPTIONAL> split_by_category var:
            # This will split the recycle bin folder by the save path defined in the `cat` attribute
            # and add the base folder name of the recycle bin that was defined in the `recycle_bin` sub-attribute under directory.
            split_by_category: true

          orphaned:
            # Orphaned files are those in the root_dir download directory that are not referenced by any active torrents.
            # Will automatically remove all files and folders in orphaned data after x days. (Checks every script run)
            # If this variable is not defined it, the orphaned data will never be emptied.
            # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
            empty_after_x_days: 7
            # File patterns that will not be considered orphaned files. Handy for generated files that aren't part of the torrent but belong with the torrent's files
            exclude_patterns:
            - '**/.DS_Store'
            - '**/Thumbs.db'
            - '**/@eaDir'
            - '**/general/*'
            - '**/*.!qB'
            - '**/*_unpackerred'
            max_orphaned_files_to_delete: 50000

          notifiarr:
            # Notifiarr integration with webhooks
            # Leave Empty/Blank to disable
            # Mandatory to fill out API Key
            apikey: "{{ .DN_API_KEY }}"
            # <OPTIONAL> Set to a unique value (could be your username on notifiarr for example)
            instance: darkfella

          webhooks:
            # Webhook notifications:
            # Possible values:
            # Set value to notifiarr if using notifiarr integration
            # Set value to apprise if using apprise integration
            # Set value to a valid webhook URL
            # Set value to nothing (leave Empty/Blank) to disable
            run_start: notifiarr
            run_end: notifiarr
            function:
              recheck: notifiarr
              tag_update: notifiarr
              rem_unregistered: notifiarr
              tag_tracker_error: notifiarr
              rem_orphaned: notifiarr
              tag_nohardlinks: notifiarr
              share_limits: notifiarr
              cleanup_dirs: notifiarr
  dataFrom:
    - extract:
        key: secrets/notifiarr
