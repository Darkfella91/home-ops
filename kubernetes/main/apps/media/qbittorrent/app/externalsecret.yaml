---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &secret qbittorrent-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: *secret
    template:
      engineVersion: v2
      data:
        CROSS_SEED_API_KEY: "{{ .CROSS_SEED_API_KEY }}"
        PUSHOVER_TOKEN: "{{ .QBITTORRENT_PUSHOVER_TOKEN }}"
        PUSHOVER_USER_KEY: "{{ .PUSHOVER_USER_KEY }}"
        WIREGUARD_PRIVATE_KEY: "{{ .WIREGUARD_PRIVATE_KEY }}"
        config.js: |
          module.exports = {
            action: "inject",
            apiKey: "{{.CROSS_SEED_API_KEY}}",
            delay: 30,
            duplicateCategories: false,
            flatLinking: false,
            includeEpisodes: true,
            includeNonVideos: true,
            includeSingleEpisodes: true,
            linkCategory: "cross-seed",
            linkDir: "/data/downloads/torrents/complete/cross-seed",
            linkType: "hardlink",
            matchMode: "safe",
            outputDir: "/config",
            port: 8080,
            qbittorrentUrl: "http://localhost",
            radarr: ["https://radarr.${PUBLIC_DOMAIN}/?apikey={{ .RADARR_API_KEY }}"],
            skipRecheck: true,
            sonarr: ["https://sonarr.${PUBLIC_DOMAIN}/?apikey={{ .SONARR_API_KEY }}"],
            torrentDir: "/qbittorrent/qBittorrent/BT_backup",
            torznab: [
                3, // IPT
                1, // SA
                2, // TL
            ].map(i => `https://prowlarr.${PUBLIC_DOMAIN}/$${i}/api?apikey={{ .PROWLARR_API_KEY }}`),
          };
        wg0.conf: |
          [Interface]
          PostUp = DROUTE=$(ip route | grep default | awk '{print $3}'); HOMENET=192.168.0.0/16; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT
          PreDown = DROUTE=$(ip route | grep default | awk '{print $3}'); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT

          # Bouncing = 8
          # NetShield = 1
          # Moderate NAT = on
          # NAT-PMP (Port Forwarding) = on
          # VPN Accelerator = on
          PrivateKey = {{.WIREGUARD_PRIVATE_KEY}}
          Address = 10.2.0.2/32
          DNS = 10.2.0.1

          [Peer]
          # CH#175
          PublicKey = XPVCz7LndzqWe7y3+WSo51hvNOX8nX5CTwVTWhzg8g8=
          AllowedIPs = 0.0.0.0/0
          Endpoint = 149.88.27.234:51820
  dataFrom:
    - extract:
        key: secrets/api-keys
    - extract:
        key: secrets/pushover
    - extract:
        key: secrets/gluetun
