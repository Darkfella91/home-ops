---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      verify:
        provider: cosign
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: topolvm
      namespace: kube-system

  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.4@sha256:e41c745b54485341e00efbd27556f0717623a119f0d5107e5ff831aa1322c76f
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret

        containers:
          oauth2-proxy:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.7.1-alpine@sha256:1a2009d3b05316a5f0a482d8951422cdf100c31fb661fd48f2b4687c87c4ffa1
            args:
              - --config=/config/config.cfg
              - --code-challenge-method=S256
              - --redis-connection-url=redis://redis-master.database.svc.cluster.local:6379/4
              - --session-store-type=redis
              - --skip-auth-route=GET=/api*
              - --skip-auth-route=POST=/api*
              - --skip-auth-route=PUT=/api*
              - --skip-auth-route=PATCH=/api*
              - --skip-auth-route=DELETE=/api*
              - --skip-auth-route=GET=/ping
              - --cookie-refresh=4m30s
              - --cookie-expire=23h30m
              - --scope=openid profile email offline_access
            env:
              OAUTH2_PROXY_WHITELIST_DOMAINS: auth.${PUBLIC_DOMAIN}
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.15.0.9412@sha256:3d922f5f80935c1aadbe49597cb4cd509e2890ca0c01d6778ac54825012fdde4
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
              RADARR__SERVER__BINDADDRESS: 127.0.0.1
              TZ: Europe/Sofia
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - "curl --fail http://127.0.0.1:80/api/v3/health?apiKey=$${RADARR__AUTH__APIKEY} || exit 1"
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 4Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: 4180

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${PUBLIC_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter_once off;
            sub_filter '</body>' '
            <script>
              window.addEventListener("load", function() {
                  // Step 1: Find the menu container where the logout button will be added
                  var menuContainer = document.querySelector(".MenuContent-scroller-n5RM_");

                  // Step 2: Check if the menu container exists
                  if (menuContainer) {
                      // Step 3: Create a new button element
                      var logoutButton = document.createElement("button");
                      logoutButton.classList.add("MenuItem-menuItem-XlMdU", "Link-link-RInnp");  // Add necessary classes

                      // Step 4: Create the SVG icon for the button (using the sign-out icon)
                      var svg = document.createElement("svg");
                      svg.setAttribute("aria-hidden", "true");
                      svg.setAttribute("focusable", "false");
                      svg.setAttribute("data-prefix", "fas");
                      svg.setAttribute("data-icon", "sign-out-alt");
                      svg.classList.add("svg-inline--fa", "fa-sign-out-alt");
                      svg.setAttribute("role", "img");
                      svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                      svg.setAttribute("viewBox", "0 0 512 512");
                      svg.innerHTML = "<path fill='currentColor' d='M480 256c0 17.7-14.3 32-32 32H118.6l60.7 60.7c12.5 12.5 12.5 32.8 0 45.3-12.5 12.5-32.8 12.5-45.3 0L15.3 314.3c-12.5-12.5-12.5-32.8 0-45.3l118.7-118.7c12.5-12.5 32.8-12.5 45.3 0l60.7 60.7H448c17.7 0 32 14.3 32 32z'></path>";

                      // Step 5: Create the button text for the "Logout" label
                      var textNode = document.createTextNode("Logout");

                      // Step 6: Append the SVG icon and the text to the button
                      logoutButton.appendChild(svg);
                      logoutButton.appendChild(textNode);

                      // Step 7: Set up the logout URL for the button
                      logoutButton.onclick = function() {
                          // Redirect to the logout endpoint with your OIDC provider sign-out URL
                          window.location.href = "https://radarr.${PUBLIC_DOMAIN}/oauth2/sign_out?rd=https%3A%2F%2Fauth.darkfellanetwork.com%2Fapplication%2Fo%2F415f53bd-96e7-4ca0-972b-29036d2dabc6%2Fend-session%2F";
                      };

                      // Step 8: Append the newly created logout button to the menu container
                      menuContainer.appendChild(logoutButton);
                  }
              });
            </script>
            </body>';
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        size: 15Gi
        accessMode: ReadWriteOnce
        advancedMounts:
          radarr:
            app:
              - path: /config

      scripts:
        type: configMap
        name: radarr-configmap
        defaultMode: 0550
        advancedMounts:
          radarr:
            app:
              - path: /scripts/pushover-notify.sh
                subPath: pushover-notify.sh
                readOnly: true

      tmp:
        type: emptyDir
        medium: Memory

      media:
        type: nfs
        server: nas.${PUBLIC_DOMAIN}
        path: /mnt/exos20/data
        advancedMounts:
          radarr:
            app:
              - path: /data

      oauth2-proxy:
        type: emptyDir
        medium: Memory
        advancedMounts:
          radarr:
            app:
              - path: /config

      oauth2-proxy-config-file:
        type: secret
        name: radarr-oauth2-proxy-secret
        advancedMounts:
          radarr:
            oauth2-proxy:
              - path: /config/config.cfg
                subPath: config.cfg
