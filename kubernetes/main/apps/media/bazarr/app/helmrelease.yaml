---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 30m
  chart:
    spec:
      verify:
        provider: cosign
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          copy-secret:
            image:
              repository: busybox
              tag: 1.37.0@sha256:768e5c6f5cb6db0794eec98dc7a967f40631746c32232b78a3105fb946f3ab83
            command: ['sh', '-c', 'mkdir -p /config/config && cp /secrets/config.yaml /config/config/config.yaml']
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.4@sha256:e41c745b54485341e00efbd27556f0717623a119f0d5107e5ff831aa1322c76f
            securityContext: *securityContext
            envFrom: &envFrom
              - secretRef:
                  name: bazarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.4.5@sha256:c0bf91443c32f3978777b4ddd2732908f51b157bbe00cd3259b23f7716bb4af7
            env:
              TZ: Europe/Sofia
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.3.0@sha256:5813a7da0ccd58f6dfb9d5e48480e2877355e6bb3d7d81c8908eb1adc3a23b6e
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${PUBLIC_DOMAIN}
          nginx.ingress.kubernetes.io/auth-url: |-
             https://outpost-internal.${PUBLIC_DOMAIN}:9443/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://bazarr.${PUBLIC_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      add-ons:
        type: emptyDir
      config:
        type: emptyDir
      secret-file:
        type: secret
        name: bazarr-config
        globalMounts:
          - readOnly: true
            path: /secrets/config.yaml
            subPath: config.yaml
      media:
        type: nfs
        server: nas.${PUBLIC_DOMAIN}
        path: /mnt/exos20/data
        globalMounts:
          - path: /data/media
            subPath: media
      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      tmp:
        type: emptyDir
