---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden
spec:
  interval: 30m
  chart:
    spec:
      chart: vaultwarden
      version: 1.2.4
      sourceRef:
        kind: HelmRepository
        name: vaultwarden
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    database:
      type: postgresql
      existingSecret: &secret vaultwarden-secret
      existingSecretKey: VAULTWARDEN_DATABASE_URI
    vaultwarden:
      domain: https://vaultwarden.${PUBLIC_DOMAIN}
      allowSignups: true
      signupDomains:
        - ${PUBLIC_DOMAIN}
      verifySignup: true
      requireEmail: false
      emailAttempts: 3
      emailTokenExpiration: 600
      allowInvitation: true
      invitationExpiration: 120
      passwordHintsAllowed: true
      showPasswordHint: false
      defaultInviteName: DarkfellaNET
      enableWebVault: true
      enableSends: true
      orgCreationUsers: all
      ## Limit attachment disk usage per organization.
      #attachmentLimitOrg:
      ## Limit attachment disk usage per user.
      #attachmentLimitUser:
      ## Limit send disk usage per user.
      #sendLimitUser:
      ## HaveIBeenPwned API Key. Can be purchased at https://haveibeenpwned.com/API/Key.
      #hibpApiKey:
      ## Number of days to auto-delete trashed items. By default iteams are not auto-deleted.
      #autoDeleteDays:
      ## Organization event logging
      #orgEvents: false
      ## Organization event retation. Leave empty to not delete.
      #orgEventsRetention: ""
      ## Allow users to change their email.
      #emailChangeAllowed: true
      ## Map of custom environment variables. Use carefully.
      #extraEnv:
      #  IP_HEADER: CF-Connecting-IP
      #  ALLOWED_IFRAME_ANCESTORS: myintranet.local
      #  COOL_VARIABLE:
      #    secretKeyRef:
      #      name: my-secret
      #      key: my-secret-key
      #  ANOTHER_VARIABLE:
      #    configMapKeyRef:
      #      name: my-config-map
      #      key: my-config-map-key

      admin:
        enabled: true
        disableAdminToken: false
        existingSecret: *secret

      emergency:
        enabled: true
        ## Schedule to send expiration reminders to emergency access grantors. Cron schedule format.
        #reminder: "0 3 * * * *"
        ## Schedule to grant emergency access requests that have met the required wait time. Cron schedule format.
        #timeout: "0 3 * * * *"

      # Enable SMTP. https://github.com/dani-garcia/vaultwarden/wiki/SMTP-configuration
      smtp:
        enabled: true
        host: smtp-relay.brevo.com
        from: noreply@${PUBLIC_DOMAIN}
        #fromName: ""
        security: starttls
        port: 587
        authMechanism: Login
        timeout: 15
        invalidHostname: false
        invalidCertificate: false
        existingSecret: *secret
        embedImages: true

      log:
        file: ""
        level: ""
      push:
        enabled: false

    service:
      type: ClusterIP
      httpPort: 80
      externalTrafficPolicy: Cluster

    ingress:
      enabled: true
      className: external
      host: &host vaultwarden.${PUBLIC_DOMAIN}
      annotations:
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_headers "access-control-allow-origin https://vaultwarden.${PUBLIC_DOMAIN}";
        external-dns.alpha.kubernetes.io/target: external.${PUBLIC_DOMAIN}
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        nginx.ingress.kubernetes.io/auth-snippet: |
          # Bypass authentication for specific paths
          if ($request_uri ~* "^/$") {
            return 200;
          }
          if ($request_uri ~* "^/.*\.js") {
            return 200;
          }
          if ($request_uri ~* "^/#/.*") {
            return 200;
          }
          if ($request_uri ~* "^/#/login") {
            return 200;
          }
          if ($request_uri ~* "^/#/2fa") {
            return 200;
          }
          if ($request_uri ~* "^/#/vault") {
            return 200;
          }
          if ($request_uri ~* "^/api/.*") {
            return 200;
          }
          if ($request_uri ~* "^/images/.*") {
            return 200;
          }
          if ($request_uri ~* "^/identity/.*") {
            return 200;
          }
          if ($request_uri ~* "^/app/.*") {
            return 200;
          }
          if ($request_uri ~* "^/locales/.*") {
            return 200;
          }
          if ($request_uri ~* "^/alive") {
            return 200;
          }
        cert-manager.io/cluster-issuer: zerossl-prod
        cert-manager.io/private-key-rotation-policy: Always
        cert-manager.io/private-key-algorithm: ECDSA
        cert-manager.io/private-key-size: "384"
      tls:
        - secretName: vaultwarden-tls
          hosts: ["*host"]

    persistence:
      enabled: true
      size: 1Gi
      accessMode: ReadWriteOnce
      storageClass: openebs-zfs-128k

    image:
      pullPolicy: IfNotPresent
      repository: vaultwarden/server

    nameOverride: ""
    fullnameOverride: ""

    replicaCount: 1

    serviceAccount:
      create: false

    deploymentAnnotations: {}
    probes: {}
      #liveness:
        #timeoutSeconds: 1
        #periodSeconds: 10
        #successThreshold: 1
        #failureThreshold: 3
      #readiness:
        #timeoutSeconds: 1
        #periodSeconds: 10
        #successThreshold: 1
        #failureThreshold: 3

    sidecars: []
    #  - name: sidecar
    #    image: sidecarimage:1.2.3
    #    env:
    #      - name: SIDECAR_END
    #        value: "sidecar"
    #    volumeMounts:
    #      - name: vaultwarden
    #        mountPath: /data

    podSecurityContext:
      fsGroup: 65534

    securityContext:
      runAsUser: 65534
      runAsGroup: 65534

    strategy: {}

    resources: {}

    nodeSelector: {}

    tolerations: []

    affinity: {}
