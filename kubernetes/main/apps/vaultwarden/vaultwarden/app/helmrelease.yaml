---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden
spec:
  interval: 30m
  chart:
    spec:
      chart: vaultwarden
      version: 0.29.3
      sourceRef:
        kind: HelmRepository
        name: vaultwarden
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  valuesFrom:
    - targetPath: smtp.from
      kind: Secret
      name: vaultwarden-secret
      valuesKey: SMTP_SENDER
  values:
    image:
      registry: docker.io
      repository: vaultwarden/server
      tag: 1.32.3-alpine@sha256:14d02649c1ed978911103894dd0863ce16a53a671aa5900d4a17c8f04b8c5a44
      pullPolicy: IfNotPresent
    commonAnnotations:
      reloader.stakater.com/auto: "true"
    initContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16.3@sha256:9c136223fb4e05b0ca24e2350c2dc45843110d0e1d09615c52c9a037628c09fa
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: vaultwarden-secret
    podSecurityContext:
    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsGroup: 1001
      runAsUser: 1001
      capabilities:
        drop:
          - ALL
    data:
      name: vaultwarden-data
      size: 15Gi
      path: /data
      keepPvc: false
      accessMode: ReadWriteOnce
    attachments:
      name: vaultwarden-files
      size: 100Gi
      path: /files
      keepPvc: false
      accessMode: ReadWriteOnce
    webVaultEnabled: true
    database:
      type: postgresql
      existingSecret: &secret vaultwarden-secret
      existingSecretKey: VAULTWARDEN_DATABASE_URI
    eventsDayRetain: 14
    domain: https://vaultwarden.${PUBLIC_DOMAIN}
    sendsAllowed: true
    trashAutoDeleteDays: 14
    signupsAllowed: true
    signupsVerify: true
    signupDomains: ${PUBLIC_DOMAIN}
    invitationsAllowed: true
    invitationOrgName: Vaultwarden
    ipHeader: X-Real-IP
    iconBlacklistNonGlobalIps: true
    requireDeviceEmail: true
    adminToken:
      existingSecret: *secret
      existingSecretKey: VAULTWARDEN_ADMIN_TOKEN
      value: {}
    timeZone: Europe/Sofia
    smtp:
      existingSecret: *secret
      host: smtp-relay.brevo.com
      security: starttls
      port: 587
      fromName: DarkfellaNET
      username:
        existingSecretKey: SMTP_USERNAME
      password:
        existingSecretKey: SMTP_VAULTWARDEN_PASS
      authMechanism: Login
    ingress:
      enabled: true
      class: external
      nginxIngressAnnotations: true
      additionalAnnotations:
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_headers "X-Content-Type-Options: nosniff";
          more_set_headers "X-Frame-Options: DENY";
          more_set_headers "X-Xss-Protection: 0";
          more_set_headers "Strict-Transport-Security: max-age=31449600; includeSubDomains; preload";
          more_set_headers "Cross-Origin-Resource-Policy: same-site";
          more_set_headers "server: hide";
        external-dns.alpha.kubernetes.io/target: external.${PUBLIC_DOMAIN}
        nginx.ingress.kubernetes.io/auth-url: |-
          https://ak-outpost-external.authentik.svc.cluster.local:9443/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://vaultwarden.${PUBLIC_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
      hostname: vaultwarden.${PUBLIC_DOMAIN}
      path: /
      pathType: Prefix
