apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: vaultwarden-cnpg-main
  namespace: vaultwarden
  annotations:
    cnpg.io/hibernation: 'off'
  labels:
    cnpg.io/reload: 'on'
spec:
  monitoring:
    enablePodMonitor: true
  backup:
    barmanObjectStore:
      data:
        compression: gzip
        encryption: AES256
        jobs: 2
      destinationPath: s3://${S3PREFIX}-vaultwarden/vaultwarden/cnpg
      endpointURL: ${S3URL}
      s3Credentials:
        accessKeyId:
          key: accessKeyId
          name: vaultwarden-config
        secretAccessKey:
          key: secretAccessKey
          name: vaultwarden-config
      serverName: vaultwarden-cnpg-main-1
      wal:
        compression: gzip
        encryption: AES256
  bootstrap:
    initdb:
      dataChecksums: true
      database: vaultwarden
      secret:
        name: vaultwarden-config
  enablePDB: true
  enableSuperuserAccess: true
  imageName: ghcr.io/cloudnative-pg/postgresql:16.3
  instances: 2
  logLevel: info
  primaryUpdateMethod: switchover
  primaryUpdateStrategy: unsupervised
  replicationSlots:
    highAvailability:
      enabled: true
      slotPrefix: _cnpg_
    synchronizeReplicas:
      enabled: true
    updateInterval: 30
  resources:
    limits:
      cpu: '4'
      memory: 8Gi
    requests:
      cpu: 200m
      memory: 400Mi
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
    resizeInUseVolumes: true
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
    resizeInUseVolumes: true
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: vaultwarden-cnpg-main-sched-backup-daily-backup
  namespace: vaultwarden
spec:
  backupOwnerReference: self
  cluster:
    name: vaultwarden-cnpg-main
  immediate: true
  method: barmanObjectStore
  schedule: "0 0 0 * * *"  # Adjust this as needed for your schedule
  suspend: false
